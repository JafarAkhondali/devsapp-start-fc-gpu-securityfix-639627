edition: 3.0.0
name: fc-http-gpu-ffmpeg
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: "{{ access }}"

vars: # 全局变量
  region: "{{ region }}"
  acrName: "{{ acrName }}"

resources:
  fc-http-gpu-ffmpeg: # 业务名称/模块名称
    component:  fc3 # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    actions:       # 自定义执行逻辑，关于actions 的使用，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#行为描述
      pre-deploy:
        - component: fc build --use-docker --dockerfile ./code/Dockerfile  # 要运行的组件，格式为【component: 组件名 命令 参数】（可以通过s cli registry search --type Component 获取组件列表）
    props:
      region: ${vars.region}              # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      functionName: "{{ functionName }}"
      description: "This is an API that demonstrates GPU transcoding"
      handler: not-used
      timeout: 600
      cpu: 8
      memorySize: 32768
      diskSize: 10240
      gpuConfig:
        gpuMemorySize: 16384
        gpuType: fc.gpu.tesla.1
      instanceConcurrency: 1
      runtime: custom-container
      internetAccess: true
      customContainerConfig:
        image: ${vars.acrName}
        caPort: 9000
      triggers:
        - triggerName: httpTrigger
          triggerType: http
          description: 'httpTrigger'
          qualifier: LATEST
          triggerConfig:
            authType: anonymous
            disableURLInternet: false
            methods:
              - GET
              - POST
              - PUT
